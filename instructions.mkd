Required tools and libraries
-----------------------------
jq  (json processing)
nix

Setting up nix:

```
 git clone git://github.com/nixos/nixpkgs
 nix-env -i -f ./nixpkgs -A nixUnstable
 export NIX_PATH=.
```



Create new release directory
----------------------------

```
ver=1.6
git clone git@github.com:TREMA-UNH/trec-car-release.git release-v$ver
cd release-v$ver
```

Configure
---------

Edit `global-config.mk` to reflect path to `mediawiki-annotate` tools and
version number of release.  --- FixMe: the config file does not include path to mediawiki-annotate tools

Set default configuration,
```
export CONFIG=trec-car
export bin=$path_to_mediawikiannotate_executables
```


Hash latest tools version for nix' auto-rebuild to work right
```
./update-tools.sh 
```



Build data
----------

./run.sh all

your links to your results will be collected in  `result-all`



Save built data and clean up
-----------------------------


When data is built, it still resides inside the nix store. We recommend to archive it once done and clean the nix store.

copy data out of result directory using "-L" to dereference softlinks
```
rsync -L result-all $yourTargetDir
```

nix tracks which files can be purged from its store through softlinks. Only when the last link (created through nix) is deleted, it will remove the build products. Until then it slowly eats up all hard drive space.

Delete target directories of this (and previous failed attempts) in results/...-$date

call the garbage collector of nix

```
nix-gc
```


------------------------------------------------------



Download dumps
--------------

Edit `configs/$CONFIG`, adjust `root_url` to point to desired dump,  
```
make download
```

Alternatively, if `*.bz2` files are available in parent directory, call 
```
make fakedownload
```


As a third alternative, create a subdirectory called `./dumps/`, place `*.bz2` files in it, and create this file
```
touch dumps/.stamp-${wiki_name}/${dump_date} 
```


Convert mediawiki into cbor
---------------------------

setup softlinks and create raw cbor
```
./make.sh raw
```

creates links from `./dumps/*` to `${outdir}/*`
then converts `*bz2` to `*cbor`

-- FixMe: what is the expectation after `make.sh raw` ?

Release TREC-CAR data
---------------------

```
# make release-v?.?
# make spritzer-v?.?

./make.sh all
```

Upload data to trec-car.cs.unh.edu
----------------------------------
rsync -a *v?.?*zip lava:trec-car/public_html/datareleases



